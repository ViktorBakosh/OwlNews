using Parser_2022_;

internal class Program
{
    private static void Main()
    {
        //Parse.DATABASE_READ("Host=localhost;User Id=postgres;Password=228522245;Database=NEWS;Port=2285;", "SELECT * FROM mykolayiv;");
        //Console.WriteLine(System.Reflection.MethodBase.GetCurrentMethod().Name);
        
        
        
        
        
        var All = new System.Diagnostics.Stopwatch();
        All.Start();
        var watch = new System.Diagnostics.Stopwatch();
        watch.Start();
        Console.WriteLine("\nAlarm");
        Parse.Alarm();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nvolyn");
        Parse.volyn();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nrivne");
        Parse.rivne();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nkhmelnytskyi");
        Parse.khmelnytskyi();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nzhytomyr");
        Parse.zhytomyr();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nchernihiv");
        Parse.chernihiv();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nvinnytsia");
        Parse.vinnytsia();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nkyiv");
        Parse.kyiv();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nkirovohradsk");
        Parse.kirovohradsk();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nzaporizhzhia");
        Parse.zaporizhzhia();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nluhansk");
        Parse.luhansk();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nlviv");
        Parse.lviv();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nternopil");
        Parse.ternopil();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nivano_frankivsk");
        Parse.ivano_frankivsk();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nchernivtsi");
        Parse.chernivtsi();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nzakarpattia");
        Parse.zakarpattia();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nkharkiv");
        Parse.kharkiv();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\ndnipropetrovsk");
        Parse.dnipropetrovsk();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nsumy");
        Parse.sumy();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nkherson");
        Parse.kherson();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\npoltava");
        Parse.poltava();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nkryvyi_rih");
        Parse.kryvyi_rih();//warning
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nodesa");
        Parse.odesa();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\nmykolayiv");
        Parse.mykolayiv();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        watch.Restart();
        Console.WriteLine("\ncherkassy");
        Parse.cherkassy();
        watch.Stop();
        Console.WriteLine($"\nTime:{watch.ElapsedMilliseconds}");
        All.Stop();
        Console.WriteLine($"\nAll:  {All.ElapsedMilliseconds/1000}");
    }
}
